AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'hello-world

  Sample SAM Template for hello-world

  '
Resources:
  HelloWorldApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
          - HelloWorldLogGroup
          - Arn
        Format: '{  "requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "caller":"$context.identity.caller", "user":"$context.identity.user", "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod", "resourcePath":"$context.resourcePath",
          "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength",
          "integrationError":"$context.integration.error", "integrationStatus":"$context.integration.integration.status"
          }'
      StageName: test
      Cors: '''*'''
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 3
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId:
              Ref: HelloWorldApi
  HelloWorldLogGroup:
    Type: AWS::Logs::LogGroup
  Account:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
        - CloudWatchRole
        - Arn
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
