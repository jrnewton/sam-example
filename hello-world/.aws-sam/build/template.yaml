AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'A prototype api for tapedeck

  '
Resources:
  TapedeckApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: tapedeck-20210319
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../../openapi.yaml
      StageName: test
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
          - LogGroup
          - Arn
        Format: '{  "requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "caller":"$context.identity.caller", "user":"$context.identity.user", "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod", "resourcePath":"$context.resourcePath",
          "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength",
          "integrationError":"$context.integration.error", "integrationStatus":"$context.integration.integration.status"
          }'
  LogGroup:
    Type: AWS::Logs::LogGroup
  Account:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
        - CloudWatchRole
        - Arn
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: TapeDeckUserPool20210319
